--  services

local Players   = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService    = game:GetService("RunService")
local TeleportService   = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

--  variables

local Player    = Players.LocalPlayer
warn(ReplicatedStorage.WaitForChild)
local DataStreams   =  ReplicatedStorage:WaitForChild("CloudFrameShared"):WaitForChild("DataStreams")
local queue_on_teleport = syn.queue_on_teleport or queue_on_teleport
local library   = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/miroeramaa/TurtleLib/main/TurtleUiLib.lua"))()
local mainWindow    = library:Window("Fishing Frontier")
local isFishing = false

--  functions

if game.PlaceId ~= 7773766301 then
    queue_on_teleport(game:HttpGet("https://raw.githubusercontent.com/ObscureScapter/FishingFrontier/main/Farm"))

    TeleportService:SetTeleportGui(game:GetObjects("rbxassetid://8249641340")[1])
    TeleportService:Teleport(7773766301)
else
    local old; old = hookmetamethod(game, "__index", function(s, k)
        if s == game and (k == "PlaceId" or k == "GameId") then
            return 2866967438
        end
        return old(s, k)
    end)

    local old; old = hookmetamethod(game, "__newindex", function(s, k, v)
        if s == game and (k == "PlaceId" or k == "GameId") then
            return
        end

        return old(s, k, v)
    end)
end

repeat wait(0) until Player and Player.FindFirstChild and Player:FindFirstChild("PlayerGui") and Player.PlayerGui:FindFirstChild("ResetData")
Player.PlayerGui.ResetData:Destroy()

mainWindow:Toggle("Auto-Fish", isFishing, function(bool)
    isFishing = bool
end)

local function findRod()
    return Player.Character and Player.Character:FindFirstChildOfClass("Tool") and Player.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Bobber")
end

Workspace.ChildAdded:connect(function(child)
    RunService.RenderStepped:wait()

    local myRod = findRod()
    if isFishing and child:FindFirstChild("Handle") and myRod and (child.Handle.CFrame.p-myRod.CFrame.p).magnitude <= 5 then
        child:Destroy()
    end
end)

RunService.RenderStepped:connect(function()
    if isFishing and findRod() then
        DataStreams.FishBiting:InvokeServer()
        
        wait(0.125)
        DataStreams.FishCaught:FireServer()
    end
end)
